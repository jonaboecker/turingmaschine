name: Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    defaults:
      run:
        working-directory: raspberry

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pylint
        run: |
          pylint $(git ls-files '*.py')

  build:
    name: Build Multi-Platform Docker Image
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU (for cross-platform emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx (for multi-arch builds)
        uses: docker/setup-buildx-action@v3

      - name: Create Docker Image (Multi-Arch)
        run: |
          mkdir -p output
          cd raspberry
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t flask-app:latest . --output type=docker,dest=../output/flask-app.tar

      - name: Upload Docker Image to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: flask-app-image
          path: output/flask-app.tar
