name: Test and Deploy

on:
  push:
    branches: [ main ]
    paths:
      - raspberry/**
  pull_request:
    branches: [ main ]
    paths:
      - raspberry/**
  workflow_dispatch:

jobs:
  lint:
    name: Lint and Build Docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    defaults:
      run:
        working-directory: raspberry

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

  deploy:
    name: Build and deploy Docker
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build Docker Image
      run: |
        cd raspberry
        docker build --platform linux/arm64 -t flask-app:latest .

    - name: Save Docker Image to File
      run: |
        mkdir -p output
        cd raspberry
        docker save flask-app:latest -o ../output/flask-app.tar

    - name: Upload Docker Image to Artifact
      uses: actions/upload-artifact@v3
      with:
        name: flask-app-image
        path: output/flask-app.tar
